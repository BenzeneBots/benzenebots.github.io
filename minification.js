const path=require("path"),minify=import("minify"),tryToCatch=require("try-to-catch"),fs=require("fs"),options={html:{removeComments:!0,removeCommentsFromCDATA:!0,removeCDATASectionsFromCDATA:!0,collapseWhitespace:!0,collapseBooleanAttributes:!0,removeAttributeQuotes:!0,removeRedundantAttributes:!0,useShortDoctype:!0,removeEmptyAttributes:!0,removeEmptyElements:!1,removeOptionalTags:!0,removeScriptTypeAttributes:!0,removeStyleLinkTypeAttributes:!0,minifyJS:!0,minifyCSS:!0},css:{compatibility:"*"},js:{ecma:5},img:{maxSize:4096}},ignoreFolders=[".git",".idea","minified"],ignoreFiles=["package.json","package-lock.json","minification.js"],havFiles=[".gitignore",".gitattributes",".htaccess","CNAME"];let folderNest=async e=>{fs.existsSync(__dirname+"\\minified\\"+e)||fs.mkdirSync(__dirname+"\\minified\\"+e),fs.readdir(__dirname+"\\"+e,((i,t)=>{t.forEach((async i=>{if(fs.lstatSync(__dirname+"\\"+e+"\\"+i).isDirectory())ignoreFolders.includes(i)||await folderNest(e+"\\"+i);else{const t=["js","html","css"],s=path.extname(i).slice(1);if(!t.includes(s))return;let r=await(await minify).minify(__dirname+"\\"+e+"\\"+i,options);fs.writeFileSync(__dirname+"\\minified\\"+e+"\\"+i,r)}}))}))},start=async()=>{fs.readdir(__dirname,((e,i)=>{i.forEach((async e=>{if(fs.lstatSync(__dirname+"\\"+e).isDirectory())ignoreFolders.includes(e)||await folderNest(e);else{const i=["js","html","css"],t=path.extname(e).slice(1);if(!i.includes(t)){if(havFiles.includes(e)){let i=fs.readFileSync(__dirname+"\\"+e);return void fs.writeFileSync(__dirname+"\\minified\\"+e,i)}return}let s=await(await minify).minify(__dirname+"\\"+e,options);fs.writeFileSync(__dirname+"\\minified\\"+e,s)}}))}))};start();